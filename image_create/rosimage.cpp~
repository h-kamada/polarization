//modelcomletion/src/in_hand_object_modeling.cppが元ネタ

#include <ros/ros.h>
#include <ros/node_handle.h>
#include <cstdlib>
#include <string.h>
//#include "cv_bridge/CvBridge.h"
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/core/core.hpp>
#include <boost/thread.hpp>
#include <sensor_msgs/Image.h>
#include <message_filters/subscriber.h>
#include <sensor_msgs/image_encodings.h>
//#include <siftfast/siftfast.h>
#include <iostream>
using namespace std;
//using namespace message_filters;
//using namespace cv::flann;
using namespace cv;

/////////////////////////////////////
class c
{
private:
  ros::Subscriber image_sub_;
  ros::NodeHandle nh_;
public:
  ros::ServiceClient client ;
  std::string image_topic_;

  c (ros::NodeHandle &nh) :nh_ (nh)
  {
    //    nh_.param("image_topic", image_topic_, std::string("/camera/rgb/image_mono"));
    image_sub_ = nh_.subscribe(image_topic_, 1, &c::Imagecallback, this);

    //parameters
  }
  void Imagecallback(const sensor_msgs::ImageConstPtr& image )
  {
  }
};

/////////////////////////////////////////////
int main(int argc, char **argv)
{
  //ros::NodeHandle n("~");
  //c tf(n);
  //enters a loop, calling message callbacks as fast as possible
  ros::spin();
}


